version: '3.8'

# Minimal resource configuration for low-end hardware
# Usage: docker-compose -f docker-compose.yml -f docker-compose.minimal.yml up

services:
  # Prometheus - Reduce resource usage
  prometheus:
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'  # Reduced from 200h
      - '--storage.tsdb.retention.size=1GB'  # Limit storage size
      - '--web.enable-lifecycle'
      - '--storage.tsdb.min-block-duration=2h'
      - '--storage.tsdb.max-block-duration=2h'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Elasticsearch - Minimal configuration
  elasticsearch:
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"  # Reduced memory
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "indices.memory.index_buffer_size=10%"
      - "http.max_content_length=50mb"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # AI Processor - Reduced resources
  ai-processor:
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - JAEGER_URL=http://jaeger:16686
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=WARNING
      - MEMORY_CACHE_SIZE_MB=128
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Chat API - Minimal resources
  chat-api:
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Qdrant - Reduced resources
  qdrant:
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Grafana - Optional for minimal setup
  grafana:
    profiles:
      - full  # Only start with --profile full
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Sample app - Optional for minimal setup
  sample-app:
    profiles:
      - demo  # Only start with --profile demo
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

  # Fluentd - Reduced configuration
  fluentd:
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # OpenTelemetry Collector - Minimal resources
  otel-collector:
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Jaeger - All-in-one minimal
  jaeger:
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - MEMORY_MAX_TRACES=5000  # Reduced from default
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'