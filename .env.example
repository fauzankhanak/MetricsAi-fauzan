# AI-Powered Observability System - Environment Configuration
# Copy this file to .env and update the values

# =============================================================================
# OPENAI API CONFIGURATION (REQUIRED FOR AI FEATURES)
# =============================================================================

# OpenAI API Key - Get yours from: https://platform.openai.com/api-keys
# See docs/OPENAI_API_SETUP.md for detailed setup instructions
OPENAI_API_KEY=sk-your-actual-openai-api-key-here

# OpenAI Model Configuration
OPENAI_MODEL=gpt-3.5-turbo          # Options: gpt-3.5-turbo, gpt-4o-mini, gpt-4o
OPENAI_TEMPERATURE=0.1              # 0.0-2.0, lower = more focused responses
OPENAI_MAX_TOKENS=1024              # Limit response length (affects cost)

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Application Environment
NODE_ENV=development
LOG_LEVEL=info                      # debug, info, warn, error
ENABLE_AI_FEATURES=true             # Set to false to disable AI features

# Service Ports
CHAT_FRONTEND_PORT=3000
CHAT_API_PORT=8000
AI_PROCESSOR_PORT=5000
PROMETHEUS_PORT=9090
GRAFANA_PORT=3001
ELASTICSEARCH_PORT=9200
JAEGER_PORT=16686
QDRANT_PORT=6333

# =============================================================================
# DATA SOURCE CONFIGURATION
# =============================================================================

# Prometheus Configuration
PROMETHEUS_URL=http://prometheus:9090
PROMETHEUS_RETENTION=200h

# Elasticsearch Configuration
ELASTICSEARCH_URL=http://elasticsearch:9200
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=
ELASTICSEARCH_INDEX_PREFIX=observability

# Jaeger Configuration  
JAEGER_URL=http://jaeger:14268
JAEGER_AGENT_HOST=jaeger
JAEGER_AGENT_PORT=14267

# =============================================================================
# AI PROCESSOR CONFIGURATION
# =============================================================================

# Vector Database (Qdrant)
QDRANT_URL=http://qdrant:6333
QDRANT_COLLECTION_NAME=observability_data

# AI Processing Limits
AI_MAX_CONCURRENT_REQUESTS=10
AI_REQUEST_TIMEOUT=30
AI_RATE_LIMIT=60                    # Requests per minute

# =============================================================================
# CHAT API CONFIGURATION
# =============================================================================

# Chat Settings
CHAT_MAX_HISTORY=50                 # Messages to keep in conversation history
CHAT_SESSION_TIMEOUT=3600           # Session timeout in seconds
CHAT_CORS_ORIGINS=*                 # Allowed CORS origins

# WebSocket Configuration
WS_MAX_CONNECTIONS=100
WS_PING_INTERVAL=30

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration (if authentication is enabled)
JWT_SECRET=your-jwt-secret-here
JWT_EXPIRE_TIME=24h

# API Keys for external services (if needed)
GITHUB_TOKEN=                       # For GitHub integration
SLACK_TOKEN=                        # For Slack notifications
WEBHOOK_SECRET=                     # For webhook verification

# =============================================================================
# RESOURCE LIMITS (FOR DOCKER)
# =============================================================================

# Memory limits (adjust based on your system)
AI_PROCESSOR_MEMORY_LIMIT=2g
CHAT_API_MEMORY_LIMIT=512m
ELASTICSEARCH_MEMORY_LIMIT=1g
PROMETHEUS_MEMORY_LIMIT=512m

# JVM Settings for Elasticsearch
ES_JAVA_OPTS=-Xms512m -Xmx1g

# =============================================================================
# OPTIONAL INTEGRATIONS
# =============================================================================

# Slack Integration (optional)
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#alerts

# Email Notifications (optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=observability@yourcompany.com

# Grafana Configuration
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development flags
DEBUG_MODE=false
VERBOSE_LOGGING=false
ENABLE_METRICS_COLLECTION=true
ENABLE_SAMPLE_DATA=true             # Generate sample data for testing

# Hot reload (development only)
HOT_RELOAD=false
WATCH_FILES=false

# =============================================================================
# EXAMPLE VALUES FOR QUICK START
# =============================================================================

# For a quick start with minimal configuration, you only need to set:
# 1. OPENAI_API_KEY=sk-your-actual-key-from-openai
# 2. Keep all other defaults

# Common OpenAI API Keys start with:
# - sk-proj-... (project keys)
# - sk-... (legacy format)

# Cost optimization tips:
# - Use gpt-3.5-turbo for lower costs (~$2-5/month for light usage)
# - Use gpt-4o-mini for best value (~$5-10/month for moderate usage)
# - Set OPENAI_MAX_TOKENS=512 to reduce costs
# - Monitor usage at: https://platform.openai.com/usage