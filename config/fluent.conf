# Input sources
<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<source>
  @type tail
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag kubernetes.*
  format json
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  time_key time
  keep_time_key true
</source>

<source>
  @type tail
  path /var/log/syslog
  pos_file /var/log/fluentd-syslog.log.pos
  tag system.syslog
  format syslog
  time_format %b %d %H:%M:%S
</source>

<source>
  @type tail
  path /var/log/auth.log
  pos_file /var/log/fluentd-auth.log.pos
  tag system.auth
  format syslog
  time_format %b %d %H:%M:%S
</source>

<source>
  @type http
  port 9880
  bind 0.0.0.0
  body_size_limit 32m
  keepalive_timeout 10s
</source>

# Processing and filtering
<filter kubernetes.**>
  @type kubernetes_metadata
  kubernetes_url "#{ENV['KUBERNETES_SERVICE_HOST']}:#{ENV['KUBERNETES_SERVICE_PORT_HTTPS']}"
  verify_ssl true
  ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
</filter>

<filter **>
  @type record_transformer
  <record>
    hostname "#{Socket.gethostname}"
    environment "#{ENV['ENVIRONMENT'] || 'development'}"
    timestamp ${time}
  </record>
</filter>

<filter **>
  @type grep
  <exclude>
    key message
    pattern ^$
  </exclude>
</filter>

# Add severity detection
<filter **>
  @type parser
  key_name message
  reserve_data true
  <parse>
    @type regexp
    expression /(?<severity>ERROR|WARN|INFO|DEBUG|TRACE|FATAL)/
  </parse>
</filter>

# Output to Elasticsearch
<match **>
  @type elasticsearch
  host elasticsearch
  port 9200
  index_name observability-logs
  type_name _doc
  
  # Buffer configuration
  <buffer>
    @type file
    path /var/log/fluentd-buffers/elasticsearch.buffer
    flush_mode interval
    retry_type exponential_backoff
    flush_thread_count 2
    flush_interval 5s
    retry_forever
    retry_max_interval 30
    chunk_limit_size 2M
    queue_limit_length 8
    overflow_action block
  </buffer>
  
  # Template configuration
  template_name observability
  template_file /fluentd/etc/elasticsearch_template.json
  template_overwrite true
  
  # Performance settings
  reload_connections false
  reconnect_on_error true
  reload_on_failure true
  
  # Log level
  log_level info
</match>

# Dead letter queue for failed records
<label @ERROR>
  <match **>
    @type file
    path /var/log/fluentd-errors
    format json
    <buffer>
      flush_mode interval
      flush_interval 30s
    </buffer>
  </match>
</label>